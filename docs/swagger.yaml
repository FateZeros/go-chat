definitions:
  models.UserBasic:
    properties:
      clientIp:
        type: string
      clientPort:
        type: string
      email:
        type: string
      heartbeatTime:
        type: string
      id:
        type: integer
      identity:
        type: string
      loginOutTime:
        type: string
      loginTime:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      responses:
        "200":
          description: code", "message"}
          schema:
            type: string
      summary: 登录
      tags:
      - 登录
  /user:
    post:
      consumes:
      - application/json
      parameters:
      - description: userData
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/models.UserBasic'
      responses:
        "200":
          description: '{"code": 200,"message": "新增成功"}'
          schema:
            type: string
      summary: 新增用户
      tags:
      - 用户模块
  /user/{userId}:
    delete:
      parameters:
      - description: id
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: code", "message"}
          schema:
            type: string
      summary: 删除用户
      tags:
      - 用户模块
  /user/list:
    get:
      responses:
        "200":
          description: code", "message"}
          schema:
            type: string
      summary: 获取用户列表
      tags:
      - 用户模块
swagger: "2.0"
